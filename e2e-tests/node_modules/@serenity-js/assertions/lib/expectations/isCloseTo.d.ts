import { Expectation } from '@serenity-js/core';
/**
 * Produces an {@apilink Expectation|expectation} that is met when the actual value
 * is within a given ± `absoluteTolerance` range of the `expected` value.
 *
 * ## Ensuring that a given floating point number is close to the expected number
 *
 * ```ts
 *  import { actorCalled } from '@serenity-js/core'
 *  import { Ensure, isCloseTo } from '@serenity-js/assertions'
 *
 *  await actorCalled('Iris').attemptsTo(
 *      Ensure.that(10.123, isCloseTo(10, 0.2))
 *  )
 * ```
 *
 * @param expected
 * @param [absoluteTolerance=1e-9]
 *  Absolute ± tolerance range, defaults to `1e-9`
 *
 * @group Expectations
 */
export declare const isCloseTo: (expected: import("@serenity-js/core").Answerable<number>, absoluteTolerance?: import("@serenity-js/core").Answerable<number>) => Expectation<number>;
//# sourceMappingURL=isCloseTo.d.ts.map