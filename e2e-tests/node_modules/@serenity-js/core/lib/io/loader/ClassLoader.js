"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClassLoader = void 0;
const errors_1 = require("../../errors");
const format_1 = require("../format");
class ClassLoader {
    constructor(loader, parser) {
        this.loader = loader;
        this.parser = parser;
    }
    looksLoadable(description) {
        return this.parser.looksLikeClassDescription(description);
    }
    instantiate(description) {
        const descriptor = this.parser.parse(description);
        const requiredModule = this.loader.require(descriptor.moduleId);
        const requiredType = requiredModule[descriptor.className];
        if (typeof requiredType !== 'function') {
            throw new errors_1.ConfigurationError((0, format_1.d) `Module ${descriptor.moduleId} doesn't seem to export ${descriptor.className}. Exported members include: ${Object.keys(requiredModule).join(', ')}`);
        }
        if (descriptor.parameter) {
            if (typeof requiredType.fromJSON !== 'function') {
                throw new errors_1.ConfigurationError((0, format_1.d) `Class ${descriptor.className} exported by ${descriptor.moduleId} needs a static fromJSON() method that accepts ${descriptor.parameter}`);
            }
            return requiredType.fromJSON(descriptor.parameter);
        }
        if (requiredType.length > 0) {
            throw new errors_1.ConfigurationError((0, format_1.d) `Class ${descriptor.className} exported by ${descriptor.moduleId} doesn't seem to offer a no-arg constructor`);
        }
        return new requiredType();
    }
}
exports.ClassLoader = ClassLoader;
//# sourceMappingURL=ClassLoader.js.map