import { DomainEvent } from '../../events';
import { CorrelationId } from '../../model';
import { DomainEventQueue } from './DomainEventQueue';
/**
 * @group Stage
 */
export declare class DomainEventQueues {
    private readonly queueIndex;
    private readonly queues;
    private readonly holdingBay;
    enqueue(event: DomainEvent & {
        sceneId: CorrelationId;
    }): void;
    forEach(callback: (queue: DomainEventQueue) => void): void;
    drainQueueFor(sceneId: CorrelationId): Array<DomainEvent & {
        sceneId: CorrelationId;
    }>;
    private shouldStartNewQueueFor;
    private hasNoQueuesReadyFor;
    private queueIdFor;
}
//# sourceMappingURL=DomainEventQueues.d.ts.map