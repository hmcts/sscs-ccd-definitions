"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrorFactory = exports.ErrorStackParser = exports.ErrorSerialiser = void 0;
/* eslint-disable simple-import-sort/imports */
const model_1 = require("./model");
const ErrorSerialiser_1 = require("./ErrorSerialiser");
/* eslint-enable simple-import-sort/imports */
// todo: export ErrorSerialiser as an instance to avoid static method calls
ErrorSerialiser_1.ErrorSerialiser.registerErrorTypes(model_1.AssertionError, model_1.ConfigurationError, model_1.ImplementationPendingError, model_1.LogicError, model_1.OperationInterruptedError, model_1.TestCompromisedError, model_1.TimeoutExpiredError, model_1.UnknownError);
__exportStar(require("./diff"), exports);
__exportStar(require("./model"), exports);
/* eslint-disable simple-import-sort/exports */
var ErrorSerialiser_2 = require("./ErrorSerialiser");
Object.defineProperty(exports, "ErrorSerialiser", { enumerable: true, get: function () { return ErrorSerialiser_2.ErrorSerialiser; } });
var ErrorStackParser_1 = require("./ErrorStackParser");
Object.defineProperty(exports, "ErrorStackParser", { enumerable: true, get: function () { return ErrorStackParser_1.ErrorStackParser; } });
/* eslint-enable simple-import-sort/exports */
var ErrorFactory_1 = require("./ErrorFactory");
Object.defineProperty(exports, "ErrorFactory", { enumerable: true, get: function () { return ErrorFactory_1.ErrorFactory; } });
__exportStar(require("./RaiseErrors"), exports);
//# sourceMappingURL=index.js.map