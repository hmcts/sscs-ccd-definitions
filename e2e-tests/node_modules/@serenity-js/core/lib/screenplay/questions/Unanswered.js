"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Unanswered = void 0;
const tiny_types_1 = require("tiny-types");
const util = __importStar(require("util")); // eslint-disable-line unicorn/import-style
/**
 * A placeholder value signifying that a {@apilink Question}
 * has not been answered by an {@apilink Actor} when producing an {@apilink ExpectationOutcome}.
 * This happens when Serenity/JS decides that answering a given question
 * won't affect the outcome.
 *
 * For example, making the actor answer questions about the expected value
 * and the actual value of each list item is unnecessary if we already know that the list itself is empty.
 *
 * @group Questions
 */
class Unanswered extends tiny_types_1.TinyType {
    [util.inspect.custom]() {
        return `<<unanswered>>`;
    }
    toString() {
        return 'unanswered';
    }
    toJSON() {
        return undefined; // eslint-disable-line unicorn/no-useless-undefined
    }
}
exports.Unanswered = Unanswered;
//# sourceMappingURL=Unanswered.js.map