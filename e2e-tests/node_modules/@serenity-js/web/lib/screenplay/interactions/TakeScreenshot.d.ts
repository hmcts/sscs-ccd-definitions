import { Answerable, AnswersQuestions, CollectsArtifacts, Interaction, UsesAbilities } from '@serenity-js/core';
/**
 * Instructs an {@apilink Actor|actor} who has the {@apilink Ability|ability} to {@apilink BrowseTheWeb}
 * to take a screenshot and emit an {@apilink Artifact},
 * which can then be persisted by {@apilink ArtifactArchiver}
 * and reported by [Serenity BDD reporter](/api/serenity-bdd).
 *
 * #### Taking a screenshot
 *
 * ```ts
 * import { actorCalled } from '@serenity-js/core';
 * import { Navigate, TakeScreenshot } from '@serenity-js/protractor';
 *
 * await actorCalled('Tania')
 *   .attemptsTo(
 *     Navigate.to('/app'),
 *     TakeScreenshot.of('my app'),
 *   )
 * ```
 *
 * ## Learn more
 *
 * - {@apilink BrowseTheWeb}
 * - {@apilink CollectsArtifacts}
 * - {@apilink Artifact}
 * - {@apilink ArtifactArchiver}
 *
 * @group Activities
 */
export declare class TakeScreenshot extends Interaction {
    private readonly name;
    /**
     * Instantiates this {@apilink Interaction}.
     *
     * @param name
     *  The name to give the emitted {@apilink Artifact}
     */
    static of(name: Answerable<string>): Interaction;
    protected constructor(name: Answerable<string>);
    /**
     * @inheritDoc
     */
    performAs(actor: UsesAbilities & AnswersQuestions & CollectsArtifacts): Promise<void>;
}
//# sourceMappingURL=TakeScreenshot.d.ts.map