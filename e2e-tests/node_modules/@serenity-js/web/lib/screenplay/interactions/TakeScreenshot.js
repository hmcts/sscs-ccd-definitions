"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TakeScreenshot = void 0;
const core_1 = require("@serenity-js/core");
const model_1 = require("@serenity-js/core/lib/model");
const abilities_1 = require("../abilities");
/**
 * Instructs an {@apilink Actor|actor} who has the {@apilink Ability|ability} to {@apilink BrowseTheWeb}
 * to take a screenshot and emit an {@apilink Artifact},
 * which can then be persisted by {@apilink ArtifactArchiver}
 * and reported by [Serenity BDD reporter](/api/serenity-bdd).
 *
 * #### Taking a screenshot
 *
 * ```ts
 * import { actorCalled } from '@serenity-js/core';
 * import { Navigate, TakeScreenshot } from '@serenity-js/protractor';
 *
 * await actorCalled('Tania')
 *   .attemptsTo(
 *     Navigate.to('/app'),
 *     TakeScreenshot.of('my app'),
 *   )
 * ```
 *
 * ## Learn more
 *
 * - {@apilink BrowseTheWeb}
 * - {@apilink CollectsArtifacts}
 * - {@apilink Artifact}
 * - {@apilink ArtifactArchiver}
 *
 * @group Activities
 */
class TakeScreenshot extends core_1.Interaction {
    /**
     * Instantiates this {@apilink Interaction}.
     *
     * @param name
     *  The name to give the emitted {@apilink Artifact}
     */
    static of(name) {
        return new TakeScreenshot(name);
    }
    constructor(name) {
        super((0, core_1.d) `#actor takes a screenshot of ${name}`);
        this.name = name;
    }
    /**
     * @inheritDoc
     */
    async performAs(actor) {
        const page = await abilities_1.BrowseTheWeb.as(actor).currentPage();
        const screenshot = await page.takeScreenshot();
        const name = await actor.answer(this.name);
        actor.collect(model_1.Photo.fromBase64(screenshot), new model_1.Name(name));
    }
}
exports.TakeScreenshot = TakeScreenshot;
//# sourceMappingURL=TakeScreenshot.js.map