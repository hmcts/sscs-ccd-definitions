import { Answerable, List, MetaQuestion } from '@serenity-js/core';
import { Locator } from './Locator';
import { PageElement } from './PageElement';
import { Selector } from './selectors';
/**
 * Uses the {@apilink Actor|actor's} {@apilink Ability|ability} to {@apilink BrowseTheWeb} to identify
 * a group of Web elements located by {@apilink Selector}.
 *
 * ## Learn more
 *
 * - [Page Element Query Language](/handbook/web-testing/page-element-query-language)
 * - {@apilink List}
 * - {@apilink MetaQuestion}
 *
 * @group Models
 */
export declare class PageElements<Native_Element_Type = any> extends List<PageElement<Native_Element_Type>> implements MetaQuestion<Answerable<PageElement<Native_Element_Type>>, Promise<Array<PageElement<Native_Element_Type>>>> {
    protected readonly locator: Answerable<Locator<Native_Element_Type>>;
    static located<NET>(selector: Answerable<Selector>): PageElements<NET>;
    /**
     * @param locator
     */
    constructor(locator: Answerable<Locator<Native_Element_Type>>);
    of(parent: Answerable<PageElement<Native_Element_Type>>): PageElements<Native_Element_Type>;
}
//# sourceMappingURL=PageElements.d.ts.map