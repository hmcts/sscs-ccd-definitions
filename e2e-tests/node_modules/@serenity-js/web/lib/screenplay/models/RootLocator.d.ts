/// <reference types="node" />
import { Optional } from '@serenity-js/core';
import * as util from 'util';
/**
 * {@apilink RootLocator} represents the context in which {@apilink Locator} looks for {@apilink PageElement} or {@apilink PageElements}.
 * This context is either a parent element, or some representation of the top-level browsing context.
 *
 * ## Learn more
 * - {@apilink Locator}
 * - {@apilink Page.locate}
 * - {@apilink PageElement}
 * - {@apilink PageElements}
 *
 * @group Models
 */
export declare abstract class RootLocator<Native_Element_Type> implements Optional {
    abstract switchToFrame(element: Native_Element_Type): Promise<void>;
    abstract switchToParentFrame(): Promise<void>;
    abstract switchToMainFrame(): Promise<void>;
    abstract isPresent(): Promise<boolean>;
    abstract nativeElement(): Promise<Partial<Native_Element_Type>>;
    toString(): string;
    [util.inspect.custom]: (depth: number, options: util.InspectOptionsStylized, inspect: typeof util.inspect) => string;
}
//# sourceMappingURL=RootLocator.d.ts.map