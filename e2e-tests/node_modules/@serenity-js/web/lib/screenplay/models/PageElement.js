"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PageElement = void 0;
const core_1 = require("@serenity-js/core");
const tiny_types_1 = require("tiny-types");
const abilities_1 = require("../abilities");
/**
 * Uses the {@apilink Actor|actor's} {@apilink Ability|ability} to {@apilink BrowseTheWeb} to identify
 * a single Web element located by {@apilink Selector}.
 *
 * ## Learn more
 * - [Page Element Query Language](/handbook/web-testing/page-element-query-language)
 * - {@apilink Optional}
 * - {@apilink Switchable}
 *
 * @group Models
 */
class PageElement {
    static located(selector) {
        return core_1.Question.about((0, core_1.d) `page element located ${selector}`, async (actor) => {
            const bySelector = await actor.answer(selector);
            const currentPage = await abilities_1.BrowseTheWeb.as(actor).currentPage();
            return currentPage.locate(bySelector);
        });
    }
    static of(childElement, parentElement) {
        return core_1.Question.about((0, core_1.d) `${childElement} of ${parentElement}`, async (actor) => {
            const child = await actor.answer(childElement);
            const parent = await actor.answer(parentElement);
            return child.of(parent);
        });
    }
    constructor(locator) {
        this.locator = locator;
        (0, tiny_types_1.ensure)('native element locator', locator, (0, tiny_types_1.isDefined)());
    }
    /**
     * An "escape hatch" providing access to the integration tool-specific implementation of a Web element.
     */
    async nativeElement() {
        return this.locator.nativeElement();
    }
    toString() {
        return `PageElement located ${this.locator.toString()}`;
    }
    /**
     * Returns a {@apilink Promise} that resolves to `true` when the element
     * is present in the [Document Object Model (DOM)](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model),
     * `false` otherwise.
     */
    async isPresent() {
        return this.locator.isPresent();
    }
}
exports.PageElement = PageElement;
//# sourceMappingURL=PageElement.js.map