import { Stage } from '@serenity-js/core';
import { ActivityFinished, ActivityStarts, DomainEvent } from '@serenity-js/core/lib/events';
/**
 * Configures the {@apilink Photographer} to take {@apilink Photo|photos}, a.k.a. screenshots,
 * of the {@apilink Activity} performed by the {@apilink Actor} in the {@apilink actorInTheSpotlight|spotlight}
 * when desired conditions are met.
 *
 * @group Stage
 */
export declare abstract class PhotoTakingStrategy {
    /**
     * Takes a photo of the web browser used by the {@apilink Actor} in the {@apilink actorInTheSpotlight|spotlight}.
     *
     * #### Learn more
     * - {@apilink ActivityStarts}
     * - {@apilink ActivityFinished}
     * - {@apilink Stage}
     *
     * @param event
     * @param stage
     *  The Stage that holds reference to the Actor in the spotlight
     */
    considerTakingPhoto(event: ActivityStarts | ActivityFinished, stage: Stage): Promise<void>;
    protected abstract shouldTakeAPhotoOf(event: DomainEvent): boolean;
    protected abstract photoNameFor(event: DomainEvent): string;
    private combinedNameFrom;
    private shouldIgnore;
}
//# sourceMappingURL=PhotoTakingStrategy.d.ts.map