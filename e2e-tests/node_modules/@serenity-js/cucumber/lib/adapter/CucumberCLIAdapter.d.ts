import { TestRunnerAdapter } from '@serenity-js/core/lib/adapter';
import { FileSystem, ModuleLoader } from '@serenity-js/core/lib/io';
import { Outcome } from '@serenity-js/core/lib/model';
import { CucumberConfig } from './CucumberConfig';
import { SerenityFormatterOutput } from './output';
/**
 * Allows for programmatic execution of Cucumber test scenarios.
 *
 * ## Learn more
 * - {@apilink TestRunnerAdapter}
 *
 * @group Integration
 */
export declare class CucumberCLIAdapter implements TestRunnerAdapter {
    private readonly loader;
    private readonly output;
    private pathsToScenarios;
    private readonly options;
    constructor(config: CucumberConfig, loader: ModuleLoader, fileSystem: FileSystem, output: SerenityFormatterOutput);
    /**
     * Scenario success threshold for this test runner, calculated based on {@apilink CucumberConfig}
     */
    successThreshold(): Outcome | {
        Code: number;
    };
    /**
     * Loads feature files.
     *
     * @param pathsToScenarios
     *  Absolute or relative paths to feature files
     */
    load(pathsToScenarios: string[]): Promise<void>;
    /**
     * Returns the number of loaded scenarios
     *
     * @throws {@apilink LogicError}
     *  If called before `load`
     */
    scenarioCount(): number;
    /**
     * Instructs Cucumber to execute feature files located at `pathsToScenarios`
     */
    run(): Promise<void>;
    private runScenarios;
    private runWithCucumber8JavaScriptApi;
    private runWithCucumber8;
    private runWithCucumber7;
    private runWithCucumber3to6;
    private runWithCucumber2;
    private runWithCucumber0to1;
}
//# sourceMappingURL=CucumberCLIAdapter.d.ts.map