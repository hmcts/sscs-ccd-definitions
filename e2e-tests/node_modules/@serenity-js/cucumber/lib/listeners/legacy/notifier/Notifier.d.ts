import { CorrelationId, Outcome } from '@serenity-js/core/lib/model';
import { Serenity } from '@serenity-js/core/lib/Serenity';
import { Feature, Scenario, ScenarioOutline, Step } from '../gherkin';
/**
 * @private
 */
export declare class Notifier {
    private readonly serenity;
    private currentSceneId;
    private currentScenario;
    private currentStepActivityId;
    constructor(serenity: Serenity);
    testRunStarts(): void;
    outlineDetected(sceneId: CorrelationId, scenario: Scenario, outline: ScenarioOutline, feature: Feature): void;
    scenarioStarts(sceneId: CorrelationId, scenario: Scenario, feature: Feature): void;
    stepStarts(step: Step): void;
    stepFinished(step: Step, outcome: Outcome): void;
    scenarioFinishes(): void;
    scenarioFinished(scenario: Scenario, feature: Feature, outcome: Outcome): void;
    testRunFinishes(): void;
    testRunFinished(outcome: Outcome): void;
    private emitSceneFinishes;
    private detailsOf;
    private scenarioHierarchyTagsFor;
    private emit;
}
//# sourceMappingURL=Notifier.d.ts.map