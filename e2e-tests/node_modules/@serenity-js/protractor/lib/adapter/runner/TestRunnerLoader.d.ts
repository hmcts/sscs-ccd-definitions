import { TestRunnerAdapter } from '@serenity-js/core/lib/adapter';
import { Path } from '@serenity-js/core/lib/io';
import { CucumberAdapterConfig } from './CucumberAdapterConfig';
/**
 * Loads a {@apilink TestRunnerAdapter} needed to invoke
 * the chosen test runner programmatically.
 *
 * @group Integration
 */
export declare class TestRunnerLoader {
    private readonly runnerId;
    private readonly moduleLoader;
    private readonly fileSystem;
    private readonly finder;
    /**
     * @param cwd
     *  Current working directory; used to resolve glob paths to files for Cucumber.js to `require`,
     *  and instructing Serenity/JS where to look for this module's optional
     *  dependencies, like [`@serenity-js/cucumber`](/api/cucumber),
     *  [`@serenity-js/mocha`](/api/mocha),
     *  [`@serenity-js/jasmine`](/api/jasmine), etc.
     *
     * @param runnerId
     *  Unique identifier used to differentiate output files produced by native Cucumber.js formatters.
     *  For example, `process.pid`
     */
    constructor(cwd: Path, runnerId: number | string);
    /**
     * See {@apilink JasmineConfig}
     *
     * @param jasmineNodeOpts
     */
    forJasmine(jasmineNodeOpts: object): TestRunnerAdapter;
    /**
     * See {@apilink MochaConfig}
     *
     * @param mochaOpts
     */
    forMocha(mochaOpts: object): TestRunnerAdapter;
    /**
     * See {@apilink CucumberConfig}
     *
     * @param cucumberOpts
     * @param adapterConfig
     */
    forCucumber(cucumberOpts: object, adapterConfig: CucumberAdapterConfig): TestRunnerAdapter;
}
//# sourceMappingURL=TestRunnerLoader.d.ts.map