{
  "env": {
    "node": true,
    "es6": true
  },
  "extends": ["@hmcts", "@hmcts/eslint-config/test", "eslint:recommended", "plugin:prettier/recommended"],
  "rules": {
    "new-cap": [
      "error",
      {
        "capIsNewExceptions": ["When", "Then", "Given", "After"]
      }
    ],
    "line-comment-position": "warn",
    "no-process-env": "warn",
    "no-magic-numbers": "warn",
    "func-names": "warn",
    "cucumber/async-then": "error",
    "cucumber/expression-type": "error",
    "cucumber/no-restricted-tags": ["error", "wip", "broken", "foo"],
    "cucumber/no-arrow-functions": "error"
  },
  "ignorePatterns": ["node_modules/", "public/", "functional-output/", "govuk_modules/", "dist", "cookie-banner/"],
  "plugins": ["eslint-plugin-import", "eslint-plugin-jsdoc", "cucumber"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": ["e2e/tsconfig.json"], // Specify it only for TypeScript files
        "sourceType": "module",
        "ecmaVersion": 2020
      },
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:prettier/recommended"
      ],
      "plugins": ["@typescript-eslint"],
      "rules": {
        // rules you want for ts/tsx files
        "@typescript-eslint/explicit-function-return-type": "warn",
        "@typescript-eslint/no-unsafe-assignment": "warn",
        "@typescript-eslint/no-unsafe-call": "warn",
        "@typescript-eslint/no-unsafe-member-access": "warn",
        "@typescript-eslint/no-unsafe-argument": "warn",
        "@typescript-eslint/no-unsafe-return": "warn",
        "@typescript-eslint/restrict-template-expressions": "warn",
        "@typescript-eslint/no-var-requires": "warn"
      }
    }
  ]
}
